#!/usr/bin/env node

require('dotenv').config();
const readline = require('readline');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

function askQuestion(question) {
    return new Promise(resolve => {
        rl.question(question, resolve);
    });
}

async function runBot() {
    console.log('ü§ñ TikTok AI Commenter Bot');
    console.log('=' .repeat(50));
    
    // –í—ã–±–æ—Ä —Ç–∏–ø–∞ –ª–µ–Ω—Ç—ã
    console.log('\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ª–µ–Ω—Ç—ã:');
    console.log('1. –û–±—â–∞—è –ª–µ–Ω—Ç–∞ (For You)');
    console.log('2. –ü–æ —Ö–µ—à—Ç–µ–≥–∞–º');
    
    const feedChoice = await askQuestion('\n–í–∞—à –≤—ã–±–æ—Ä (1 –∏–ª–∏ 2): ');
    
    let args = ['src/bot.js'];
    
    if (feedChoice === '2') {
        const hashtags = await askQuestion('–í–≤–µ–¥–∏—Ç–µ —Ö–µ—à—Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: #—Ä–∞–±–æ—Ç–∞,#–≤–∞–∫–∞–Ω—Å–∏–∏): ');
        args.push('--hashtag', hashtags);
    }
    
    rl.close();
    
    // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    console.log('\nüöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
    console.log('–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\n');
    
    require('child_process').spawn('node', args, {
        stdio: 'inherit'
    });
}

runBot().catch(console.error);