const OpenAI = require('openai');

class CommentGenerator {
    constructor(openaiKey) {
        this.openai = new OpenAI({ apiKey: openaiKey });
        
        // –°—Ç–∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏
        this.commentStyles = {
            personal_experience: {
                description: "–õ–∏—á–Ω—ã–π –æ–ø—ã—Ç",
                examples: [
                    "—è —Ç–æ–∂–µ —Ç–∞–∫ –¥—É–º–∞–ª, –ø–æ–∫–∞ –Ω–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å",
                    "—Å–∞–º —á–µ—Ä–µ–∑ —ç—Ç–æ –ø—Ä–æ—à–µ–ª, —Ç–µ–ø–µ—Ä—å –≤—Ä–µ–º—è —ç–∫–æ–Ω–æ–º–ª—é",
                    "—É –º–µ–Ω—è —Ç–∞ –∂–µ –∏—Å—Ç–æ—Ä–∏—è –±—ã–ª–∞ —Å –æ—Ç–∫–ª–∏–∫–∞–º–∏"
                ]
            },
            helpful_tip: {
                description: "–ü–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç",
                examples: [
                    "–∫—Å—Ç–∞—Ç–∏, –¥–ª—è –æ—Ç–∫–ª–∏–∫–æ–≤ –µ—Å—Ç—å –∫—Ä—É—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã",
                    "–ø–æ–ø—Ä–æ–±—É–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä—É—Ç–∏–Ω—É, —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ—Ç",
                    "–µ—Å—Ç—å —Å–ø–æ—Å–æ–± —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ –ø–æ–∏—Å–∫–µ —Ä–∞–±–æ—Ç—ã"
                ]
            },
            question: {
                description: "–í–æ–ø—Ä–æ—Å —Å –ø–æ–¥—Ç–µ–∫—Å—Ç–æ–º",
                examples: [
                    "–∞ —Ç—ã –ø—Ä–æ–±–æ–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∫–ª–∏–∫–∏?",
                    "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Ö–æ–¥–∏—Ç –Ω–∞ –æ—Ç–∫–ª–∏–∫–∏?",
                    "–∫—Ç–æ-–Ω–∏–±—É–¥—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç AI –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞–±–æ—Ç—ã?"
                ]
            },
            support: {
                description: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                examples: [
                    "–¥–µ—Ä–∂–∏—Å—å! –≥–ª–∞–≤–Ω–æ–µ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞",
                    "–≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è! –ø–æ–ø—Ä–æ–±—É–π –Ω–æ–≤—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –æ—Ç–∫–ª–∏–∫–∞–º",
                    "–ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è, —Å–∞–º –∏—Å–∫–∞–ª —Ä–∞–±–æ—Ç—É –º–µ—Å—è—Ü–∞–º–∏"
                ]
            },
            humor: {
                description: "–Æ–º–æ—Ä",
                examples: [
                    "–æ—Ç–∫–ª–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å - —ç—Ç–æ –Ω–æ–≤—ã–π –≤–∏–¥ —Å–ø–æ—Ä—Ç–∞ üòÖ",
                    "hh –¥–æ–ª–∂–µ–Ω –ø–ª–∞—Ç–∏—Ç—å –∑–∞ –≤—Ä–µ–º—è –≤ –∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏",
                    "—Ä–æ–±–æ—Ç –±—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –æ—Ç–∫–ª–∏–∫–∞–º–∏ –ª—É—á—à–µ –º–µ–Ω—è ü§ñ"
                ]
            }
        };
    }

    async generateComment(videoData, analysisResult) {
        try {
            // –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Å—Ç–∏–ª—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞
            const style = this.selectCommentStyle(videoData, analysisResult);
            
            const prompt = this.buildGenerationPrompt(videoData, analysisResult, style);
            
            const completion = await this.openai.chat.completions.create({
                model: "gpt-4-turbo-preview",
                messages: [
                    {
                        role: "system",
                        content: "–¢—ã –º–∞—Å—Ç–µ—Ä –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ TikTok. –ü–∏—à–µ—à—å –∫—Ä–∞—Ç–∫–æ, –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, —Å —ç–º–æ—Ü–∏—è–º–∏. –ù–∏–∫–∞–∫–æ–π —è–≤–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã."
                    },
                    {
                        role: "user",
                        content: prompt
                    }
                ],
                temperature: 0.8,
                max_tokens: 200,
                response_format: { type: "json_object" }
            });

            const result = JSON.parse(completion.choices[0].message.content);
            
            // –ü–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            return this.postProcessComment(result);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è:', error);
            return this.getFallbackComment(videoData);
        }
    }

    selectCommentStyle(videoData, analysisResult) {
        // –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–∏–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const category = analysisResult.content_category;
        const engagement = analysisResult.engagement_potential;
        
        if (category === 'work' && videoData.description?.toLowerCase().includes('—É—Å—Ç–∞–ª')) {
            return 'personal_experience';
        }
        
        if (category === 'motivation') {
            return Math.random() > 0.5 ? 'support' : 'helpful_tip';
        }
        
        if (category === 'humor') {
            return 'humor';
        }
        
        if (engagement === 'high') {
            return 'question';
        }
        
        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –ø–æ–ª–µ–∑–Ω—ã–π —Å–æ–≤–µ—Ç
        return 'helpful_tip';
    }

    buildGenerationPrompt(videoData, analysisResult, style) {
        const styleExamples = this.commentStyles[style].examples.join('\n- ');
        
        return `
–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –≤–∏–¥–µ–æ –≤ TikTok.

–ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–¥–µ–æ:
- –û–ø–∏—Å–∞–Ω–∏–µ: ${videoData.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è'}
- –ê–≤—Ç–æ—Ä: @${videoData.author}
- –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${analysisResult.content_category}
- –ü—Ä–∏—á–∏–Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏: ${analysisResult.reason}

–°—Ç–∏–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: ${this.commentStyles[style].description}
–ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª—è:
- ${styleExamples}

–†–µ–∫–ª–∞–º–∏—Ä—É–µ–º—ã–π —Å–µ—Ä–≤–∏—Å: AI –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç–∫–ª–∏–∫–æ–≤ –Ω–∞ HeadHunter

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1. –ú–∞–∫—Å–∏–º—É–º 100-120 —Å–∏–º–≤–æ–ª–æ–≤ (—ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!)
2. –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π —è–∑—ã–∫
3. –ë–ï–ó –ø—Ä—è–º—ã—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å–µ—Ä–≤–∏—Å
4. –ë–ï–ó —Å–ª–æ–≤ "–±–æ—Ç", "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π", "—Å–µ—Ä–≤–∏—Å", "AI"
5. –õ–µ–≥–∫–∏–π –Ω–∞–º–µ–∫ –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é/—ç–∫–æ–Ω–æ–º–∏—é –≤—Ä–µ–º–µ–Ω–∏
6. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–æ–Ω—É –≤–∏–¥–µ–æ
7. –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏ —É–º–µ—Ä–µ–Ω–Ω–æ (0-2 —à—Ç—É–∫–∏)
8. –ü–∏—à–∏ –Ω–∞ —Ç–æ–º —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ

–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞: —Ä–µ–∫–ª–∞–º–∞, –ø—Ä–æ–º–æ, —Å–ø–∞–º, –±–æ—Ç, —Å–µ—Ä–≤–∏—Å, —Å—Å—ã–ª–∫–∞, —Å–∫–∞—á–∞—Ç—å, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å

–•–æ—Ä–æ—à–∏–µ –ø—Ä–∏–º–µ—Ä—ã:
- "—Ç–æ–∂–µ –∏—Å–∫–∞–ª —Ä–∞–±–æ—Ç—É –º–µ—Å—è—Ü–∞–º–∏, –ø–æ–∫–∞ –Ω–µ –Ω–∞—á–∞–ª —É–º–Ω–µ–µ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –æ—Ç–∫–ª–∏–∫–∞–º üí°"
- "–∑–Ω–∞–∫–æ–º–æ... —è —Ç–µ–ø–µ—Ä—å —Ç—Ä–∞—á—É –Ω–∞ –æ—Ç–∫–ª–∏–∫–∏ 5 –º–∏–Ω—É—Ç –≤–º–µ—Å—Ç–æ —á–∞—Å–æ–≤"
- "–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤—å –µ—Å–ª–∏ –±—ã –æ—Ç–∫–ª–∏–∫–∏ —Å–∞–º–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å? üöÄ"

–ü–ª–æ—Ö–∏–µ –ø—Ä–∏–º–µ—Ä—ã:
- "–ü–æ–ø—Ä–æ–±—É–π –Ω–∞—à —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–∫–ª–∏–∫–æ–≤!" (—è–≤–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞)
- "–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –ø—Ä–æ—Ñ–∏–ª–µ" (—Å–ø–∞–º)
- "–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Å –æ—Ç–∫–ª–∏–∫–∞–º–∏" (–ø—Ä—è–º–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ)

–û—Ç–≤–µ—Ç—å –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
    "comment": "—Ç–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è",
    "style": "${style}",
    "confidence": 0.0-1.0,
    "tone": "friendly|casual|supportive|humorous",
    "risk_level": "low|medium|high"
}`;
    }

    postProcessComment(result) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã
        if (result.comment.length > 150) {
            result.comment = result.comment.substring(0, 147) + '...';
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        const bannedWords = ['—Ä–µ–∫–ª–∞–º–∞', '–ø—Ä–æ–º–æ', '—Å–ø–∞–º', '–±–æ—Ç', '—Å–µ—Ä–≤–∏—Å', '—Å—Å—ã–ª–∫–∞', '—Å–∫–∞—á–∞—Ç—å', '—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'];
        const lowerComment = result.comment.toLowerCase();
        
        for (const word of bannedWords) {
            if (lowerComment.includes(word)) {
                console.warn(`‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: ${word}`);
                result.risk_level = 'high';
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å —Å —ç–º–æ–¥–∑–∏
        if (Math.random() < 0.3 && !result.comment.includes('üòÇ') && !result.comment.includes('ü§£')) {
            const emojis = ['üí™', '‚ú®', 'üéØ', '‚ö°', 'üî•', 'üëç'];
            result.comment += ' ' + emojis[Math.floor(Math.random() * emojis.length)];
        }
        
        return result;
    }

    getFallbackComment(videoData) {
        // –ó–∞–ø–∞—Å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏
        const fallbacks = [
            {
                comment: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥! üëç",
                style: "support",
                confidence: 0.5,
                tone: "friendly",
                risk_level: "low"
            },
            {
                comment: "–°–æ–≥–ª–∞—Å–µ–Ω, –≤—Ä–µ–º—è - —Å–∞–º—ã–π —Ü–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å",
                style: "helpful_tip",
                confidence: 0.5,
                tone: "casual",
                risk_level: "low"
            },
            {
                comment: "–¢–æ–∂–µ —á–µ—Ä–µ–∑ —ç—Ç–æ –ø—Ä–æ—Ö–æ–¥–∏–ª...",
                style: "personal_experience",
                confidence: 0.5,
                tone: "supportive",
                risk_level: "low"
            }
        ];
        
        return fallbacks[Math.floor(Math.random() * fallbacks.length)];
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–ª—è A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    async generateVariants(videoData, analysisResult, count = 3) {
        const variants = [];
        const styles = Object.keys(this.commentStyles);
        
        for (let i = 0; i < count; i++) {
            const style = styles[i % styles.length];
            const variant = await this.generateComment(
                videoData, 
                { ...analysisResult, _forceStyle: style }
            );
            variants.push(variant);
            
            // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            if (i < count - 1) {
                await new Promise(resolve => setTimeout(resolve, 500));
            }
        }
        
        // –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ confidence
        return variants.sort((a, b) => b.confidence - a.confidence)[0];
    }
}

module.exports = CommentGenerator;